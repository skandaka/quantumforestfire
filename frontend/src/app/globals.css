/* Import Tailwind CSS layers */
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Define global CSS variables for theming. This is the single source of truth
  for colors, fonts, and other design tokens, making the application's
  visual identity consistent and easy to modify.
*/
@layer base {
  :root {
    --background: 0 0% 3.9%;
    --foreground: 0 0% 98%;

    --card: 0 0% 3.9%;
    --card-foreground: 0 0% 98%;

    --popover: 0 0% 3.9%;
    --popover-foreground: 0 0% 98%;

    --primary: 0 84.2% 60.2%;
    --primary-foreground: 0 85.7% 97.3%;

    --secondary: 0 0% 14.9%;
    --secondary-foreground: 0 0% 98%;

    --muted: 0 0% 14.9%;
    --muted-foreground: 0 0% 63.9%;

    --accent: 0 0% 14.9%;
    --accent-foreground: 0 0% 98%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 0 0% 98%;

    --border: 0 0% 14.9%;
    --input: 0 0% 14.9%;
    --ring: 0 84.2% 60.2%;

    --radius: 0.5rem;

    --font-sans: 'Inter', sans-serif;
  }
}

/* Apply base styles to the document. This includes setting the default
  font, background color, and ensuring smooth font rendering.
*/
@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
    font-family: var(--font-sans);
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
}

/* Custom component styles. This is where we define reusable component-like
  classes that can be applied throughout the application.
*/
@layer components {
  /*
    The "quantum-glow" effect is a signature animation for this application.
    It uses a pseudo-element with a conic gradient to create a shimmering
    border effect on hover and focus, reinforcing the high-tech theme.
  */
  .quantum-glow {
    position: relative;
    overflow: hidden;
    --glow-color: theme('colors.red.500');
  }

  .quantum-glow::before {
    content: '';
    position: absolute;
    width: 200%;
    height: 200%;
    top: -50%;
    left: -50%;
    z-index: 0;
    background: conic-gradient(
            from 180deg at 50% 50%,
            transparent 0%,
            var(--glow-color) 30%,
            transparent 60%,
            transparent 100%
    );
    opacity: 0;
    transform-origin: center;
    animation: quantum-spin 4s linear infinite;
    transition: opacity 0.4s ease-in-out;
  }

  .quantum-glow:hover::before,
  .quantum-glow:focus-visible::before {
    opacity: 0.3;
  }

  .quantum-glow > * {
    position: relative;
    z-index: 1;
  }

  /*
    Custom spinner animation for loading states. This is a simple, clean
    rotation animation applied to loading icons.
  */
  .spinner {
    display: inline-block;
    border: 3px solid rgba(255, 255, 255, 0.2);
    border-top-color: theme('colors.red.500');
    border-radius: 50%;
    animation: spin 1s linear infinite;
  }
}

/* Custom keyframe animations used by the component classes.
*/
@layer utilities {
  @keyframes quantum-spin {
    from {
      transform: rotate(0deg);
    }
    to {
      transform: rotate(360deg);
    }
  }

  @keyframes spin {
    to {
      transform: rotate(360deg);
    }
  }

  @keyframes pulse-bright {
    0%, 100% {
      opacity: 1;
      box-shadow: 0 0 5px theme('colors.green.500'), 0 0 10px theme('colors.green.500');
    }
    50% {
      opacity: 0.7;
      box-shadow: 0 0 15px theme('colors.green.400'), 0 0 25px theme('colors.green.400');
    }
  }
}

/*
  Custom scrollbar styling for a more immersive, on-theme experience.
  This styles the scrollbar to match the dark aesthetic of the application,
  which is a professional touch that improves the overall look and feel.
*/
::-webkit-scrollbar {
  width: 10px;
  height: 10px;
}
::-webkit-scrollbar-track {
  background: #111827; /* gray-900 */
}
::-webkit-scrollbar-thumb {
  background-color: #374151; /* gray-700 */
  border-radius: 6px;
  border: 2px solid #111827; /* gray-900 */
}
::-webkit-scrollbar-thumb:hover {
  background-color: #4b5563; /* gray-600 */
}
::-webkit-scrollbar-corner {
  background: #111827; /* gray-900 */
}